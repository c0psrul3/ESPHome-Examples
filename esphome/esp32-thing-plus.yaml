substitutions:
  name: esp32-thing-plus
  device_name: ThingPlus
  device_make: Sparkfun
  sw_version: "0.2.1"
  bme280_addr: "0x76"
  htu21d_addr: "0x40"
  # ld2410_name: mmWave

esphome:
  name: "${name}"
  friendly_name: "${device_name}"
  comment: "${device_name} by ${device_make}"
  name_add_mac_suffix: false
  # min_version: "2024.9.2"
  project:
    name: "${device_make}.${device_name}"
    version: "${sw_version}"
  on_boot:
    priority: 600
    then:
      - light.turn_on:
          id: rgb_light
          effect: "Boot Sequence"
          red: 100%
          green: 100%
          blue: 100%
      - delay: 2000ms
      - light.turn_on:
          id: rgb_light
          effect: none
      - light.turn_off:
          id: rgb_light

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: !secret d1_presence_1_api_key

ota:
  - platform: esphome
    password: !secret esphome_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret domain
  fast_connect: true
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esp32-Thing-Plus"
    password: !secret wifi_password

web_server:
  port: 80

i2c:
  sda: 23
  scl: 22
  id: bus_a
  scan: True

# Example configuration entry I2C
sensor:
  - platform: htu21d
    model: htu21d
    i2c_id: bus_a
    address: "${htu21d_addr}"
    update_interval: 1s
    temperature:
      name: "Temperature"
    humidity:
      name: "Humidity"
    heater:
      name: "Heater"

  # - platform: bme280_i2c
  #   i2c_id: bus_a
  #   update_interval: 1s
  #   address: "${bme280_addr}"
  #   temperature:
  #     name: "BME280 Temperature"
  #   pressure:
  #     name: "BME280 Pressure"
  #   humidity:
  #     name: "BME280 Humidity"

light:
  - platform: status_led
    name: ESP32 status LED
    pin: 13
    entity_category: config
    disabled_by_default: False
    internal: True
  - platform: neopixelbus
    id: rgb_light
    type: GRB
    variant: WS2812
    pin: 12
    num_leds: 1
    name: "${device_name} Light"
    # entity_category: config
    gamma_correct: 0
    restore_mode: RESTORE_DEFAULT_OFF
    effects:
      - addressable_rainbow:
          name: "Boot Sequence"
          speed: 50
          width: 1

binary_sensor:
  - platform: gpio
    pin:
      number: 0
      inverted: true
    name: "RedKeyboardButton1"
    id: "RedKeyboardButton1"
    on_press:
    - logger.log: "Big red button pressed"



# ld2410:
#   id: ld2410_radar
  
# uart:
#   id: uart_bus
#   tx_pin:
#     number: TX
#   rx_pin:
#     number: RX
#   baud_rate: 256000
#   parity: NONE
#   stop_bits: 1

# number:
#   - platform: ld2410
#     timeout:
#       name: Radar Timeout
#     max_move_distance_gate:
#       name: Radar Max Move Distance
#     max_still_distance_gate:
#       name: Radar Max Still Distance
#     g0:
#       move_threshold:
#         name: g0 move threshold
#       still_threshold:
#         name: g0 still threshold
#     g1:
#       move_threshold:
#         name: g1 move threshold
#       still_threshold:
#         name: g1 still threshold
#     g2:
#       move_threshold:
#         name: g2 move threshold
#       still_threshold:
#         name: g2 still threshold
#     g3:
#       move_threshold:
#         name: g3 move threshold
#       still_threshold:
#         name: g3 still threshold
#     g4:
#       move_threshold:
#         name: g4 move threshold
#       still_threshold:
#         name: g4 still threshold
#     g5:
#       move_threshold:
#         name: g5 move threshold
#       still_threshold:
#         name: g5 still threshold
#     g6:
#       move_threshold:
#         name: g6 move threshold
#       still_threshold:
#         name: g6 still threshold
#     g7:
#       move_threshold:
#         name: g7 move threshold
#       still_threshold:
#         name: g7 still threshold
#     g8:
#       move_threshold:
#         name: g8 move threshold
#       still_threshold:
#         name: g8 still threshold

# binary_sensor:
#   - platform: ld2410
#     has_target:
#       name: Radar Target
#       id: radar_has_target
#     has_moving_target:
#       name: Radar Moving Target
#     has_still_target:
#       name: Radar Still Target
# button:
#   - platform: ld2410
#     factory_reset:
#       name: "factory reset"
#     restart:
#       name: "restart"
#     query_params:
#       name: query params

# sensor:
#   - platform: ld2410
#     moving_distance:
#       name: Radar Moving Distance
#       id: moving_distance
#     still_distance:
#       name: Radar Still Distance
#       id: still_distance
#     moving_energy:
#       name: Radar Move Energy
#     still_energy:
#       name: Radar Still Energy
#     detection_distance:
#       name: Radar Detection Distance
#       id: radar_detection_distance
#     g0:
#       move_energy:
#         name: g0 move energy
#       still_energy:
#         name: g0 still energy
#     g1:
#       move_energy:
#         name: g1 move energy
#       still_energy:
#         name: g1 still energy
#     g2:
#       move_energy:
#         name: g2 move energy
#       still_energy:
#         name: g2 still energy
#     g3:
#       move_energy:
#         name: g3 move energy
#       still_energy:
#         name: g3 still energy
#     g4:
#       move_energy:
#         name: g4 move energy
#       still_energy:
#         name: g4 still energy
#     g5:
#       move_energy:
#         name: g5 move energy
#       still_energy:
#         name: g5 still energy
#     g6:
#       move_energy:
#         name: g6 move energy
#       still_energy:
#         name: g6 still energy
#     g7:
#       move_energy:
#         name: g7 move energy
#       still_energy:
#         name: g7 still energy
#     g8:
#       move_energy:
#         name: g8 move energy
#       still_energy:
#         name: g8 still energy



#   - platform: adc
#     name: "Battery Voltage"
#     id: batvolt
#     pin: A0
#     accuracy_decimals: 2
#     update_interval: 1s
#     unit_of_measurement: "V"
#     icon: mdi:battery-medium
#     filters:
#       - multiply: 4.5
#       - median:
#           window_size: 7
#           send_every: 7
#           send_first_at: 7
#       - throttle: 15min
#     on_value:
#       then:
#         - component.update: batpercent

#   - platform: template
#     name: "Battery %"
#     id: batpercent
#     lambda: return id(batvolt).state;
#     accuracy_decimals: 0
#     unit_of_measurement: "%"
#     icon: mdi:battery-medium
#     filters:
#       - calibrate_linear:
#          method: exact
#          datapoints:
#           - 0.00 -> 0.0
#           - 3.30 -> 1.0
#           - 3.39 -> 10.0
#           - 3.75 -> 50.0
#           - 4.11 -> 90.0
#           - 4.20 -> 100.0
#       - lambda: |-
#           if (x <= 100) {
#             return x;
#           } else {
#             return 100;
#           }
#           if (x <0) {
#             return 0;
#           }