# * [ PINOUT - M5Stack-CPlus ](https://shop.m5stack.com/cdn/shop/products/7_1200x1200.webp)
#
# * [ PRODUCT - M5Stack-CPlus ](https://shop.m5stack.com/products/m5stickc-plus-esp32-pico-mini-iot-development-kit)

#
# sub `lightEntity` defines the entity name of the light device in HomeAssistant to be controlled
#
substitutions:
  lightEntity: lifx_nightvision_6d46f2_4
  lightEntity1: library_floor_lamp_plugin
  # lightEntity1: lifx_color_66f3f4_4
  log_level: "INFO"
  friendly_name: "homething-basic"

logger:
  # level: ${log_level}

esphome:
  name: m5stack-cplus
  friendly_name: M5Stack-CPlus

esp32:
  board: m5stick-c
  framework:
    type: arduino

# Enable Home Assistant API
api:
  id: homeassistant_api_id
  encryption:
    key: !secret m5stack_cplus_api_key
  # actions:
  #   - action: start_effect
  #     variables:
  #       my_brightness: int
  #       my_effect: string
  #     then:
  #       - light.turn_on:
  #           id: my_light
  #           brightness: !lambda 'return my_brightness;'
  #           effect: !lambda 'return my_effect;'

ota:
  - platform: esphome
    password: !secret esphome_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret domain
  fast_connect: true
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "M5Stack-Cplus Fallback Hotspot"
    password: !secret wifi_password

# captive_portal:

web_server:
  port: 80

# external_components:
#   - source: github://landonr/homeThing
#       # type: local
#       # path: components
#     refresh: 0s
#     components: [homeThingDisplayState, homeThing]

spi:
  clk_pin: GPIO13
  mosi_pin: GPIO15

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2811
    pin: GPIO0
    num_leds: 10
    id: rgb_matrix
    internal: false

time:
  - platform: homeassistant
    id: esptime
    # on_time_sync:
    #   then:
    #     component.update: my_display

binary_sensor:
  - platform: status
    id: api_connected
    internal: true

  #G37=Button
  - platform: gpio
    name: Button front
    id: button_input_1
    pin:
      number: GPIO37
      inverted: true
    on_press:
      then:
        - logger.log: Button G37 Pressed
        - homeassistant.action:
            action: script.button_light_toggle
            data:
              light_name: '$lightEntity'
            #   red: '255'
            #   green: '199'
            #   blue: '71'

  #G39=Button
  - platform: gpio
    name: Button side
    id: button_input_0
    pin:
      number: GPIO39
      inverted: true
    on_press:
      then:
        - logger.log: Button G39 Pressed
        - homeassistant.action:
            action: script.button_light_toggle
            data:
              light_name: '$lightEntity1'
            #   red: '255'
            #   green: '199'
            #   blue: '71'

switch:
  - platform: homeassistant
    id: ha_light_entity
    entity_id: light.$lightEntity
    on_turn_on:
      - logger.log: "HA Light Turned On!"
      - light.turn_on:
          id: rgb_matrix
          brightness: 50%
          red: 0%
          green: 100%
          blue: 0%
    on_turn_off:
      - logger.log: "HA Light Turned Off!"
      - light.turn_on:
          id: rgb_matrix
          brightness: 50%
          red: 50%
          green: 0%
          blue: 50%

