esphome:
  name: d1-mini32-presence-1
  friendly_name: mmwave-1
  area: master_bathroom
  # friendly_name: master-bathroom-presence
  # friendly_name: ld2410-1
  # on_boot:
  #   priority: -100
  #   then:
  #     - script.execute: get_config

esp32:
  board: esp32dev
  # board: wemos_d1_mini32
  framework:
    type: arduino


# Enable logging
logger:
  baud_rate: 0
  # level: DEBUG
  # # logs:
  # #   sensor: INFO # DEBUG level with uart_target_output = overload!
  # #   binary_sensor: INFO
  # #   text_sensor: INFO

# Enable Home Assistant API
api:
  encryption:
    key: !secret d1_mini32_api_key

ota:
  - platform: esphome
    password: !secret esphome_ota_password


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret domain
  # fast_connect: true
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Presence-1 Fallback Hotspot"
    password: !secret wifi_password

 
i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true
  id: bus_a
  
uart:
  id: uart_0
  tx_pin: GPIO17
  # tx_pin: TX
  rx_pin: GPIO16
  # rx_pin: RX
  baud_rate: 256000
  parity: NONE
  stop_bits: 1
  # debug:
  #   direction: BOTH
  #   dummy_receiver: false
  #   after:
  #     delimiter: [0xF8,0xF7,0xF6,0xF5]

web_server:
  port: 80

# # Include voltage or battery section if applicable
# voltage:
#   pin: VBUS  # Replace with the actual pin connected to the LD2450 sensor

time:
  - platform: homeassistant

ld2410:
  id: ld2410_radar
  uart_id: uart_0
  throttle: 1500ms


light:
  - platform: binary
    name: "Blue Status Light"
    output: light_output
    id: led_light
    restore_mode: ALWAYS_OFF
 
output:
  - platform: gpio
    pin: GPIO2
    id: light_output
 

switch:
  - platform: ld2410
    ld2410_id: ld2410_radar
    engineering_mode:
      name: "engineering mode"
    bluetooth:
      name: "control bluetooth"

number:
  - platform: ld2410
    ld2410_id: ld2410_radar
    timeout:
      name: Radar Timeout
    max_move_distance_gate:
      name: Radar Max Move Distance
    max_still_distance_gate:
      name: Radar Max Still Distance
    g0:
      move_threshold:
        name: g0 move threshold
      still_threshold:
        name: g0 still threshold
    g1:
      move_threshold:
        name: g1 move threshold
      still_threshold:
        name: g1 still threshold
    g2:
      move_threshold:
        name: g2 move threshold
      still_threshold:
        name: g2 still threshold
    g3:
      move_threshold:
        name: g3 move threshold
      still_threshold:
        name: g3 still threshold
    g4:
      move_threshold:
        name: g4 move threshold
      still_threshold:
        name: g4 still threshold
    g5:
      move_threshold:
        name: g5 move threshold
      still_threshold:
        name: g5 still threshold
    g6:
      move_threshold:
        name: g6 move threshold
      still_threshold:
        name: g6 still threshold
    g7:
      move_threshold:
        name: g7 move threshold
      still_threshold:
        name: g7 still threshold
    g8:
      move_threshold:
        name: g8 move threshold
      still_threshold:
        name: g8 still threshold

button:
  - platform: ld2410
    factory_reset:
      name: "factory reset"
    restart:
      name: "restart"
    query_params:
      name: query params

binary_sensor:
  - platform: ld2410
    has_target:
      name: Presence
      id: radar_has_target
    has_moving_target:
      name: Moving Target
    has_still_target:
      name: Still Target

sensor:
  - platform: uptime
    name: Uptime
    entity_category: "diagnostic"
    update_interval: 300s
  - platform: wifi_signal
    name: "WiFi Signal"
    accuracy_decimals: 1
    entity_category: "diagnostic"
    update_interval: 5s
    filters:
      - exponential_moving_average:
          alpha: 0.05
          send_every: 2
          send_first_at: 2
      - or:
        - throttle: 600s
        - delta: 2

  - platform: bme280_i2c
    i2c_id: bus_a
    update_interval: 30s
    address: 0x76
    temperature:
      name: "Temperature"
      id: bme280_temperature
      unit_of_measurement: "°C"
    pressure:
      name: "Pressure"
      id: bme280_pressure
    humidity:
      name: "Humidity"
      id: bme280_humidity
  - platform: template
    name: "Altitude"
    lambda: |-
      const float STANDARD_SEA_LEVEL_PRESSURE = 1013.25; //in hPa, see note
      return ((id(bme280_temperature).state + 273.15) / 0.0065) *
        (powf((STANDARD_SEA_LEVEL_PRESSURE / id(bme280_pressure).state), 0.190234) - 1); // in meter
    update_interval: 15s
    icon: 'mdi:signal'
    unit_of_measurement: 'm'
  - platform: absolute_humidity
    name: "Absolute Humidity"
    temperature: bme280_temperature
    humidity: bme280_humidity
  - platform: template
    name: "Dew Point"
    lambda: |-
      return (243.5*(log(id(bme280_humidity).state/100)+((17.67*id(bme280_temperature).state)/
      (243.5+id(bme280_temperature).state)))/(17.67-log(id(bme280_humidity).state/100)-
      ((17.67*id(bme280_temperature).state)/(243.5+id(bme280_temperature).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'
  - platform: template
    name: "Temperature Fahrenheit"
    id: bme280_temperature_f
    lambda: |-
      return (id(bme280_temperature).state * (9.0/5.0) + 32.0);
    unit_of_measurement: °F
    icon: 'mdi:thermometer'

  # - platform: adc
  #   name: "Battery Voltage"
  #   id: batvolt
  #   pin: A0
  #   accuracy_decimals: 2
  #   update_interval: 1s
  #   unit_of_measurement: "V"
  #   icon: mdi:battery-medium
  #   filters:
  #     - multiply: 4.5
  #     - median:
  #         window_size: 7
  #         send_every: 7
  #         send_first_at: 7
  #     - throttle: 15min
  #   on_value:
  #     then:
  #       - component.update: batpercent
  # - platform: template
  #   name: "Battery %"
  #   id: batpercent
  #   lambda: return id(batvolt).state;
  #   accuracy_decimals: 0
  #   unit_of_measurement: "%"
  #   icon: mdi:battery-medium
  #   filters:
  #     - calibrate_linear:
  #        method: exact
  #        datapoints:
  #         - 0.00 -> 0.0
  #         - 3.30 -> 1.0
  #         - 3.39 -> 10.0
  #         - 3.75 -> 50.0
  #         - 4.11 -> 90.0
  #         - 4.20 -> 100.0
  #     - lambda: |-
  #         if (x <= 100) {
  #           return x;
  #         } else {
  #           return 100;
  #         }
  #         if (x <0) {
  #           return 0;
  #         }

  - platform: ld2410
    # update_interval: 30s
    light:
      name: light
    moving_distance:
      name: Radar Moving Distance
      id: moving_distance
    still_distance:
      name: Radar Still Distance
      id: still_distance
    moving_energy:
      name: Radar Move Energy
    still_energy:
      name: Radar Still Energy
    detection_distance:
      name: Radar Detection Distance
      id: radar_detection_distance
    g0:
      move_energy:
        name: g0 move energy
      still_energy:
        name: g0 still energy
    g1:
      move_energy:
        name: g1 move energy
      still_energy:
        name: g1 still energy
    g2:
      move_energy:
        name: g2 move energy
      still_energy:
        name: g2 still energy
    g3:
      move_energy:
        name: g3 move energy
      still_energy:
        name: g3 still energy
    g4:
      move_energy:
        name: g4 move energy
      still_energy:
        name: g4 still energy
    g5:
      move_energy:
        name: g5 move energy
      still_energy:
        name: g5 still energy
    g6:
      move_energy:
        name: g6 move energy
      still_energy:
        name: g6 still energy
    g7:
      move_energy:
        name: g7 move energy
      still_energy:
        name: g7 still energy
    g8:
      move_energy:
        name: g8 move energy
      still_energy:
        name: g8 still energy



