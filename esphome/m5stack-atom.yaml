# * PRODUCT: [ M5Stack-Atom-matrix - product details ](https://shop.m5stack.com/products/atom-matrix-esp32-development-kit)
# * PINOUT: [ M5Stack-Atom-matrix - pinout ](https://shop.m5stack.com/cdn/shop/products/7_0ba7f1df-51f7-41be-a0f6-a2bb946508c8_1200x1200.jpg)

esphome:
  name: m5stack-atom
  friendly_name: M5Stack-Atom

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret m5stack_atom_api_key
  # actions:
  #   - action: start_effect
  #     variables:
  #       my_brightness: int
  #       my_effect: string
  #     then:
  #       - light.turn_on:
  #           id: rgb_matrix
  #           brightness: !lambda 'return my_brightness;'
  #           effect: !lambda 'return my_effect;'

ota:
  - platform: esphome
    password: !secret esphome_ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: !secret domain
  fast_connect: true
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "M5Stack-Atom Fallback Hotspot"
    password: !secret wifi_password

web_server:
  port: 80

# # Deep Sleep Feature. Needs adjustments...
# deep_sleep:
#   run_duration: 300s
#   sleep_duration: 30min

# globals:
#   - id: temperatureOffset
#     type: float
#     restore_value: no
#     initial_value: 3.1

substitutions:
  lightEntity: lifx_nightvision_6d46f2_4

# Output that blinks the LED
output:
  - platform: template
    id: status_output
    type: binary
    inverted: True
    write_action:
    # 
    - if:
        condition:
          lambda: return (state);
        then:
          - light.turn_on:
              id: rgb_matrix
              brightness: 50%
              red: 100%
              green: 0%
              blue: 50%
        else:
          - light.turn_off: rgb_matrix

#G12=IR
remote_transmitter:
  pin: GPIO12
  carrier_duty_percent: 50%

light:
  # Enable status LED  (this appears to be necessary for inheriting rgb values from output.status_output)
  - platform: status_led
    output: status_output
    name: "Status Led"
    internal: True

  #G27=RGB WS2812C-2020
  - platform: fastled_clockless
    chipset: WS2812
    pin: GPIO27
    num_leds: 25
    rgb_order: GRB
    name: "FastLED WS2812 Light"
    id: rgb_matrix
    restore_mode: ALWAYS_OFF

  # # control rgb_matrix from IR remote input
  # - platform: esp32_rmt_led_strip
  #   rgb_order: GRB
  #   pin: GPIO27
  #   num_leds: 25
  #   # RMT 0 channels will be occupied by IR
  #   rmt_channel: 1
  #   chipset: ws2812
  #   id: rgb_matrix
  #   name: "RGB Matrix"

binary_sensor:
  #G39=Button
  - platform: gpio
    name: Button
    id: button_input_0
    pin:
      number: GPIO39
      inverted: true
    #   mode:
    #     input: true
    # filters:
    #   - delayed_off: 10ms
    on_press:
      then:
        - logger.log: Button G39 Pressed
        - homeassistant.action:
            action: script.button_light_toggle
            data:
              light_name: '$lightEntity'
            #   red: '255'
            #   green: '199'
            #   blue: '71'
        # - homeassistant.service:
        #     service: switch.toggle
        #     data:
        #       entity_id: light.$lightEntity

  # hook for device entity state change (substitutions.lightEntity)
  - platform: homeassistant
    id: $lightEntity
    entity_id: light.$lightEntity
    internal: true
    on_state:
      then:
        - light.toggle: rgb_matrix
    # on_state:
    #   if:
    #     it.state == True
    #   then:
    #     - light.turn_on: rgb_matrix
    #   else:
    #     - light.turn_off: rgb_matrix